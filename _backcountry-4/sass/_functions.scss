@function settings($key) {
	@if not map-has-key($settings, $key) {
    	@warn "Key `#{$key}` not found in $settings map.";
  	}	
  	@return map-get($settings, $key);
}

@function segment($key){
	@return ($key * settings(segment)) + settings(unit)
}

@function segmentBorder($key, $border){
	@return (($key * settings(segment)) - $border) + settings(unit)
}

@function rhythm($key){
	@return ($key * settings(rhythm)) + settings(unit)
}

@function rhythmBorder($key, $border) {
	@return (($key * settings(rhythm)) - $border) + settings(unit)
}

@function tint($color, $percentage) {
  	@return mix($color, white, $percentage);
}

@function shade($color, $percentage) {
  	@return mix($color, black, $percentage);
}

@function hexrgb($color) { 
	$red: red($color); 
	$green: green($color);
	$blue: blue($color);
	$rgb: 'rgb(#{$red,$green,$blue})';
  	@return $rgb;
}

@function fonts($key) {
	@if not map-has-key($fonts, $key) {
    	@warn "Key `#{$key}` not found in $fonts map.";
  	}	
  	@return map-get($fonts, $key);
}

@function colors($key) {
	@if not map-has-key($colors, $key) {
    	@warn "Key `#{$key}` not found in $colors map.";
  	}	
  	@return map-get($colors, $key);
}

@function colorFamily($key) {
	@if not map-has-key($colorFamily, $key) {
    	@warn "Key `#{$key}` not found in $colorFamily map.";
  	}	
  	@return map-get($colorFamily, $key);
}

@function weight($key) {
	@if not map-has-key($weight, $key) {
    	@warn "Key `#{$key}` not found in $weight map.";
  	}	
  	@return map-get($weight, $key);
}